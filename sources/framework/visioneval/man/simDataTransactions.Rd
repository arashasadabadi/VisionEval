% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/initialization.R
\name{simDataTransactions}
\alias{simDataTransactions}
\title{Create simulation of datastore transactions.}
\usage{
simDataTransactions(ModuleCalls_df)
}
\arguments{
\item{ModuleCalls_df}{A data frame of module calls as produced by the
'parseModelScript' function.}
}
\value{
There is no return value. The function has the side effect of
writing messages to the log and stops program execution if there are any
errors.
}
\description{
\code{simDataTransactions}Function loads all module specifications in order
(by run year) and creates a simulated listing of the data which is in the
datastore and the requests of data from the datastore and checks whether
tables will be present to put datasets in and that datasets will be present
that data is to be retrieved from.
}
\details{
This function creates a list of the datastore listings for the working
datastore and for all datastore references. The list includes a 'Global'
component, in which 'Global' references are simulated, components for each
model run year, in which 'Year' references are simulated, and if the base
year is not one of the run years, a base year component, in which base year
references are simulated. For each model run year the function steps through
a data frame of module calls as produced by 'parseModelScript', and loads and
processes the module specifications in order: adds 'NewInpTable' references,
adds 'Inp' dataset references, checks whether references to datasets
identified in 'Get' specifications are present, adds 'NewSetTable' references,
and adds 'Set' dataset references. The function compiles a vector of error
and warning messages. Error messages are made if: 1) a 'NewInpTable' or
'NewSetTable' specification of a module would create a new table for a table
that already exists; 2) a dataset identified by a 'Get' specification would
not be present in the working datastore or any referenced datastores; 3) the
'Get' specifications for a dataset would not be consistent with the
specifications for the dataset in the datastore. The function compiles
warnings if a 'Set' specification will cause existing data in the working
datastore to be overwritten. The function writes warning and error messages
to the log and stops program execution if there are any errors.
}
