% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/units.R
\name{convertMagnitude}
\alias{convertMagnitude}
\title{Convert values between different magnitudes.}
\usage{
convertMagnitude(Values_, FromMagnitude, ToMagnitude)
}
\arguments{
\item{Values_}{a numeric vector of values to convert from one unit to another.}

\item{FromMagnitude}{a number or string identifying the magnitude of the
units of the input Values_.}

\item{ToMagnitude}{a number or string identifying the magnitude to convert
the Values_ to.}
}
\value{
A numeric vector of values corresponding the the input Values_ but
converted from the magnitude identified in the FromMagnitude argument to the
magnitude identified in the ToMagnitude argument. If either the FromMagnitude
or the ToMagnitude arguments is NA, the original Values_ are returned. The
Converted attribute of the returned values is FALSE. Otherwise the conversion
is done and the Converted attribute of the returned values is TRUE.
}
\description{
\code{convertMagnitude} converts values between different magnitudes such as
between dollars and thousands of dollars.
}
\details{
The visioneval framework stores all quantities in single units to be
unambiguous about the data contained in the datastore. For example,  total
income for a region would be stored in dollars rather than in thousands
of dollars or millions of dollars. However, often inputs for large quantities
are expressed in thousands or millions. Also submodels may be estimated using
values expressed in multiples, or they might produce results that are
multiples. Where that is the case, the framework enables model users and
developers to encode the data multiplier in the input file field name or the
UNITS specification. The framework functions then use that information to
convert units to and from the single units stored in the datastore. This
function implements the conversion.
}
