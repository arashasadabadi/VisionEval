% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/units.R
\name{convertUnits}
\alias{convertUnits}
\title{Convert values between units of measure.}
\usage{
convertUnits(Values_, DataType, FromUnits, ToUnits = "default")
}
\arguments{
\item{Values_}{a numeric vector of values to convert from one unit to another.}

\item{DataType}{a string identifying the data type.}

\item{FromUnits}{a string identifying the units of measure of the Values_.}

\item{ToUnits}{a string identifying the units of measure to convert the
Values_ to. If the ToUnits are 'default' the Values_ are converted to the
default units for the model.}
}
\value{
A list containing the converted values and additional information as
follows:
Values - a numeric vector containing the converted values.
FromUnits - a string representation of the units converted from.
ToUnits - a string representation of the units converted to.
Errors - a string containing an error message or character(0) if no errors.
Warnings - a string containing a warning message or character(0) if no
warning.
}
\description{
\code{convertUnits} converts values between different units of measure for
complex and compound data types recognized by the visioneval code.
}
\details{
The visioneval code recognizes 4 simple data types (integer, double, logical,
and character) and 9 complex data types (e.g. distance, time, mass).
The simple data types can have any units of measure, but the complex data
types must use units of measure that are declared in the Types() function. In
addition, there is a compound data type that can have units that are composed
of the units of two or more complex data types. For example, speed is a
compound data type composed of distance divided by speed. With this example,
speed in miles per hour would be represented as MI/HR. This function converts
a vector of values from one unit of measure to another unit of measure.
For compound data type it combines multiple unit conversions.
}
